git命令


## 初始化Git仓储/仓库
在项目目录右键打开bit bash
git init

## 配置个人信息
在git中设置当前使用的用户是谁
配置用户名: git config --global user.name "xiaoming"
--global: 以--开头的都是参数，然后按空格跟参数值
配置邮箱: git config --global user.email "xiaoming@qq.com"

## 把代码存储到.git仓储中

git add ./readme.md
提交当前目录下的readme.md放到大门口(暂存区)
git commit -m "本次提交的说明，完成了什么功能"
把仓储门口的代码放到版本库中

## 查看当前的状态(是在工作区，还是在暂存区，或者版本库)
git status

## 把所有修改的文件提交到暂存区
git add ./

## 一次性把所有修改的文件提交到版本库
git commit --all -m "这是一次性将文件从工作区提交到版本库"

## git中的忽略文件
.gitignore, 在这个文件中可以设置要被忽略的文件或者目录。
被忽略的文件不会被提交到仓储区。
在.gitignore中写被忽略的文件的路径,以/开头
一行一个路径

git log
查看历史提交的日志

git log --oneline
查看简洁版的日志

## 回退到指定的版本
git reset --hard Head~0
表示你回退到上一次代码提交的状态
Head~1 回退到上上次

git reset --hard 版本号
使用版本号进行精确版本回退到某一次提交的状态

git reflog
查看每一次切换版本的记录:可以看到所有提交的版本号

分支
默认是在主分支master: 主分支
创建dev分支	刚创建时dev里的东西和master分支里是一样的
git branch dev		(master)
查看dev分支
git branch 		(master)
切换到dev分支
git checkout dev 	(master)->(dev)
在dev分支中进行开发，开发完成后进行提交	(dev)
然后切换到master主分支，在主分支下进行合并	(master)
合并分支内容，把当前分支与指定的分支（dev）,进行合并，带*的分支就是当前分支
git merge dev

clear清屏

git branch -d dev (master)
删除分支,在其他分支中删除dev分支

合并时如果有冲突conflict，需要手动处理，然后再提交一次

github(当成git服务器使用)

### 提交代码到github(git服务器)
git push 地址 master
把当前的分支的内容上传到远程的master分支上

git pull 地址 master(可能是其他分支)
从远程的master分支拿代码,本地先初始化一个git仓储

git clone 地址
会得到远程仓储相同的数据，多次执行会覆盖本地的内容